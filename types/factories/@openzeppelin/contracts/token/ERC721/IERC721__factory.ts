/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC721,
  IERC721Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC721/IERC721";

const _abi = [
  "event Approval(address indexed,address indexed,uint256 indexed)",
  "event ApprovalForAll(address indexed,address indexed,bool)",
  "event Transfer(address indexed,address indexed,uint256 indexed)",
  "function approve(address,uint256)",
  "function balanceOf(address) view returns (uint256)",
  "function getApproved(uint256) view returns (address)",
  "function isApprovedForAll(address,address) view returns (bool)",
  "function ownerOf(uint256) view returns (address)",
  "function safeTransferFrom(address,address,uint256)",
  "function safeTransferFrom(address,address,uint256,bytes)",
  "function setApprovalForAll(address,bool)",
  "function supportsInterface(bytes4) view returns (bool)",
  "function transferFrom(address,address,uint256)",
] as const;

export class IERC721__factory {
  static readonly abi = _abi;
  static createInterface(): IERC721Interface {
    return new utils.Interface(_abi) as IERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC721 {
    return new Contract(address, _abi, signerOrProvider) as IERC721;
  }
}
