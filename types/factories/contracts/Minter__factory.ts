/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  "constructor(address,address,address)",
  "event Mint(address indexed,uint256,uint256,uint256)",
  "function MAX_TEAM_RATE() view returns (uint256)",
  "function _rewards_distributor() view returns (address)",
  "function _ve() view returns (address)",
  "function _velo() view returns (address)",
  "function _voter() view returns (address)",
  "function acceptTeam()",
  "function active_period() view returns (uint256)",
  "function calculate_emission() view returns (uint256)",
  "function calculate_growth(uint256) view returns (uint256)",
  "function circulating_emission() view returns (uint256)",
  "function circulating_supply() view returns (uint256)",
  "function initialize(address[],uint256[],uint256)",
  "function pendingTeam() view returns (address)",
  "function setTeam(address)",
  "function setTeamRate(uint256)",
  "function team() view returns (address)",
  "function teamRate() view returns (uint256)",
  "function update_period() returns (uint256)",
  "function weekly() view returns (uint256)",
  "function weekly_emission() view returns (uint256)",
] as const;

export class Minter__factory {
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new utils.Interface(_abi) as MinterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Minter {
    return new Contract(address, _abi, signerOrProvider) as Minter;
  }
}
