/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPair,
  IPairInterface,
} from "../../../contracts/interfaces/IPair";

const _abi = [
  "function burn(address) returns (uint256, uint256)",
  "function claimFees() returns (uint256, uint256)",
  "function getAmountOut(uint256,address) view returns (uint256)",
  "function getReserves() view returns (uint256, uint256, uint256)",
  "function metadata() view returns (uint256, uint256, uint256, uint256, bool, address, address)",
  "function mint(address) returns (uint256)",
  "function permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
  "function swap(uint256,uint256,address,bytes)",
  "function tokens() returns (address, address)",
  "function transferFrom(address,address,uint256) returns (bool)",
] as const;

export class IPair__factory {
  static readonly abi = _abi;
  static createInterface(): IPairInterface {
    return new utils.Interface(_abi) as IPairInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IPair {
    return new Contract(address, _abi, signerOrProvider) as IPair;
  }
}
